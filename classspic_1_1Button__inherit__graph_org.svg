<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="188pt" height="848pt" viewBox="0 0 188 848"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 844)"><title>spic::Button</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="Instances of this class are clickable user interface items."><polygon fill="#bfbfbf" stroke="#000" points="22.5 -.5 22.5 -79.5 157.5 -79.5 157.5 -.5 22.5 -.5"/><text x="90" y="-67.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Button</text><polyline fill="none" stroke="#000" points="22.5 -60.5 157.5 -60.5"/><polyline fill="none" stroke="#000" points="22.5 -41.5 157.5 -41.5"/><text x="30.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Click()</text><text x="30.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnClick(std::function</text><text x="30.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; void()&gt; callback)</text></a></g></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="classspic_1_1UIObject.html" xlink:title="Base class for a user interface object like Button or Text. @spicapi."><polygon fill="none" stroke="#000" points="51 -116.5 51 -173.5 129 -173.5 129 -116.5 51 -116.5"/><text x="90" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::UIObject</text><polyline fill="none" stroke="#000" points="51 -154.5 129 -154.5"/><polyline fill="none" stroke="#000" points="51 -135.5 129 -135.5"/></a></g></g><g id="edge1" class="edge"><title>Node2-&gt;Node1</title><path fill="none" stroke="#191970" d="M90,-106.16C90,-97.47 90,-88.23 90,-79.52"/><polygon fill="none" stroke="#191970" points="86.5 -106.4 90 -116.4 93.5 -106.4 86.5 -106.4"/></g><g id="node3" class="node"><title>Node3</title><g id="a_node3"><a target="_top" xlink:href="classspic_1_1GameObject.html" xlink:title="Any object which should be represented on screen."><polygon fill="none" stroke="#000" points="0 -210.5 0 -839.5 180 -839.5 180 -210.5 0 -210.5"/><text x="90" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::GameObject</text><polyline fill="none" stroke="#000" points="0 -820.5 180 -820.5"/><polyline fill="none" stroke="#000" points="0 -801.5 180 -801.5"/><text x="8" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name)</text><text x="8" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ operator bool()</text><text x="8" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ bool operator!=(const</text><text x="8" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ bool operator==(const</text><text x="8" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void AddComponent(std</text><text x="8" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; Component</text><text x="8" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; component)</text><text x="8" y="-679.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::shared_ptr&lt; Component</text><text x="8" y="-668.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; GetComponent() const</text><text x="8" y="-657.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::shared_ptr&lt; Component</text><text x="8" y="-646.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; GetComponentInChildren</text><text x="8" y="-635.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const</text><text x="8" y="-624.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::shared_ptr&lt; Component</text><text x="8" y="-613.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; GetComponentInParent</text><text x="8" y="-602.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const</text><text x="8" y="-591.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::vector&lt; std::shared</text><text x="8" y="-580.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; GetComponents</text><text x="8" y="-569.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const</text><text x="8" y="-558.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::vector&lt; std::shared</text><text x="8" y="-547.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; GetComponents</text><text x="8" y="-536.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">InChildren() const</text><text x="8" y="-525.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::vector&lt; std::shared</text><text x="8" y="-514.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; GetComponents</text><text x="8" y="-503.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">InParent() const</text><text x="8" y="-492.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Active(bool flag)</text><text x="8" y="-481.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ bool Active() const</text><text x="8" y="-470.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ bool IsActiveInWorld</text><text x="8" y="-459.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const</text><text x="8" y="-448.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static std::shared</text><text x="8" y="-437.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; Find</text><text x="8" y="-426.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;name)</text><text x="8" y="-415.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static std::vector</text><text x="8" y="-404.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; std::shared_ptr&lt; GameObject</text><text x="8" y="-393.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; &gt; FindGameObjectsWithTag</text><text x="8" y="-382.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;tag)</text><text x="8" y="-371.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static std::shared</text><text x="8" y="-360.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; FindWith</text><text x="8" y="-349.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Tag(const std::string &amp;tag)</text><text x="8" y="-338.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static std::shared</text><text x="8" y="-327.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; FindObject</text><text x="8" y="-316.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">OfType(bool includeInactive=false)</text><text x="8" y="-305.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static std::vector</text><text x="8" y="-294.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; std::shared_ptr&lt; GameObject</text><text x="8" y="-283.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; &gt; FindObjectsOfType(bool</text><text x="8" y="-272.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">includeInactive=false)</text><text x="8" y="-261.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-250.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(std::shared_ptr&lt; GameObject</text><text x="8" y="-239.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; obj)</text><text x="8" y="-228.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-217.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(Component *obj)</text></a></g></g><g id="edge2" class="edge"><title>Node3-&gt;Node2</title><path fill="none" stroke="#191970" d="M90,-199.92C90,-190.04 90,-181.2 90,-173.67"/><polygon fill="none" stroke="#191970" points="86.5 -200.12 90 -210.12 93.5 -200.12 86.5 -200.12"/></g></g></svg>